apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: pipeline-ci-api
spec:
  #
  description: | 
    Pipeline CI que hace el git clone y compila la imagen
  params:
  - name: repo-url
    type: string
    description: The git repo URL to clone from.  
  - name: revision
    type: string
    description: Git branch
    default: main
  - name: img-registry
    type: string
    description: Refgistry fqdn
  - name: img-context
    type: string
    description: Directorio del archivo Dockerfile 
  - name: img-dockerfile
    type: string
    description: Nombre del archivo Dockerfile 
  workspaces:
  - name: workspace-git
    description: |
      Workspace para clonar el proyecto
  - name: dockerconfig-ws
    description: |
      Workspace para el archivo dockerconfigjson
    optional: true
  tasks:
  # Task Git clone que recibe los parametros de url y revision ( branch )
  - name: clone
    # taskRef:
    #   kind: ClusterTask
    #   name: git-clone
    params:
          - name: url
            value: $(params.repo-url)
          - name: revision
            value: main
          - name: refspec
            value: ''
          - name: submodules
            value: 'true'
          - name: depth
            value: '1'
          - name: sslVerify
            value: 'true'
          - name: crtFileName
            value: ca-bundle.crt
          - name: subdirectory
            value: ''
          - name: sparseCheckoutDirectories
            value: ''
          - name: deleteExisting
            value: 'true'
          - name: httpProxy
            value: ''
          - name: httpsProxy
            value: ''
          - name: noProxy
            value: ''
          - name: verbose
            value: 'true'
          - name: gitInitImage
            value: 'gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.40.2'
          - name: userHome
            value: /home/git
    taskRef:
          kind: Task
          name: git-clone
    workspaces:
    - name: output
      workspace: workspace-git

  - name: buildah-bud
    taskRef:
      resolver: hub
      params:
        - name: kind
          value: task
        - name: name
          value: buildah
        - name: version
          value: "0.7"
    runAfter:
      - clone
    workspaces:
    - name: source
      workspace: workspace-git
    - name: dockerconfig
      workspace: dockerconfig-ws
    params:
    - name: IMAGE
      value: $(params.img-registry)
    - name: CONTEXT
      value: /workspace/source/$(params.img-context)
    - name: DOCKERFILE
      value: $(params.img-dockerfile)
